import pytest
from ferret.main import Ferret


def _get_contents_of(file_path):
    try:
        with open(file_path, errors='ignore') as file:
            return file.read()
    except IOError:
        return None


@pytest.mark.parametrize("language,website", [
    ("pt", "aasp"),
    ("pt", "aba"),
    ("pt", "abdc"),
    ("pt", "abrampa"),
    ("pt", "age-mg"),
    ("pt", "agencia-brasil"),
    ("pt", "agu"),
    ("pt", "ajufe"),
    ("pt", "ajufergs"),
    ("pt", "al-ac"),
    ("pt", "al-ce"),
    ("pt", "al-go"),
    ("pt", "al-ms"),
    ("pt", "al-mt"),
    ("pt", "al-pb"),
    ("pt", "al-rj"),
    ("pt", "al-rs"),
    ("pt", "al-sp"),
    ("pt", "al-to"),
    ("pt", "amab"),
    ("pt", "amatra-05"),
    ("pt", "ambito-juridico"),
    ("pt", "anamatra"),
    ("pt", "anpt"),
    ("pt", "apbc"),
    ("pt", "apeminas"),
    ("pt", "cd"),
    ("pt", "cgu"),
    ("pt", "cnj"),
    ("pt", "cnmp"),
    ("pt", "conamp"),
    ("pt", "consultor-juridico"),
    ("pt", "controle-publico"),
    ("pt", "correio-forense"),
    ("pt", "correio_da_bahia"),
    ("pt", "dp-al"),
    ("pt", "dp-df"),
    ("pt", "dp-mg"),
    ("pt", "dp-mt"),
    ("pt", "dp-rj"),
    ("pt", "dp-rs"),
    ("pt", "dp-to"),
    ("pt", "dpu"),
    ("pt", "folhapolitica"),
    ("pt", "g1"),
    ("pt", "ibdfam"),
    ("pt", "ibdp-direito-previdenciario"),
    ("pt", "inst-rui-barbosa"),
    ("pt", "internet-legal"),
    ("pt", "jf"),
    ("pt", "jf-al"),
    ("pt", "jornal-ordem-rs"),
    ("pt", "juristas"),
    ("pt", "jurisway"),
    ("pt", "lfg"),
    ("pt", "mj"),
    ("pt", "mp-am"),
    ("pt", "mp-df"),
    ("pt", "mp-pb"),
    ("pt", "mp-pr"),
    ("pt", "mp-rs"),
    ("pt", "mpf"),
    ("pt", "mps"),
    ("pt", "mpt-prt4"),
    ("pt", "mpt-prt5"),
    ("pt", "msn"),
    ("pt", "oab"),
    ("pt", "oab-ba"),
    ("pt", "oab-ce"),
    ("pt", "oab-df"),
    ("pt", "oab-ma"),
    ("pt", "oab-ms"),
    ("pt", "oab-pe"),
    ("pt", "oab-rn"),
    ("pt", "oab-rs"),
    ("pt", "oab-sc"),
    ("pt", "oab-se"),
    ("pt", "oab-sp"),
    ("pt", "oab-to"),
    ("pt", "observatorio-eco"),
    ("pt", "pgr"),
    ("pt", "pndt"),
    ("pt", "portal-justificando"),
    ("pt", "pr-rs"),
    ("pt", "r7"),
    ("pt", "rf"),
    ("pt", "sebrae-sp"),
    ("pt", "senado"),
    ("pt", "sindjufe-go"),
    ("pt", "stj"),
    ("pt", "tce-ba"),
    ("pt", "tce-ce"),
    ("pt", "tce-ma"),
    ("pt", "tce-sc"),
    ("pt", "tce-se"),
    ("pt", "tcu"),
    ("pt", "terra"),
    ("pt", "tj-ce"),
    ("pt", "tj-df"),
    ("pt", "tj-es"),
    ("pt", "tj-go"),
    ("pt", "tj-mg"),
    ("pt", "tj-ms"),
    ("pt", "tj-pr"),
    ("pt", "tj-sc"),
    ("pt", "tre-ac"),
    ("pt", "tre-al"),
    ("pt", "tre-ap"),
    ("pt", "tre-ce"),
    ("pt", "tre-df"),
    ("pt", "tre-es"),
    ("pt", "tre-go"),
    ("pt", "tre-ma"),
    ("pt", "tre-mg"),
    ("pt", "tre-ms"),
    ("pt", "tre-mt"),
    ("pt", "tre-pa"),
    ("pt", "tre-pb"),
    ("pt", "tre-pi"),
    ("pt", "tre-pr"),
    ("pt", "tre-rj"),
    ("pt", "tre-rn"),
    ("pt", "tre-ro"),
    ("pt", "tre-rr"),
    ("pt", "tre-rs"),
    ("pt", "tre-sc"),
    ("pt", "tre-se"),
    ("pt", "tre-sp"),
    ("pt", "tre-to"),
    ("pt", "trf-1"),
    ("pt", "trf-4"),
    ("pt", "trf-5"),
    ("pt", "trt-13"),
    ("pt", "trt-14"),
    ("pt", "trt-15"),
    ("pt", "trt-2"),
    ("pt", "trt-20"),
    ("pt", "trt-6"),
    ("pt", "trt-7"),
    ("pt", "tse"),
    ("pt", "tst"),
    ("pt", "ultima-instancia"),
    ("pt", "unafe"),
    ("pt", "uol"),
    ("pt", "yahoo"),
    ("pt", "bndes"),
    ("pt", "dp-ms"),
    ("pt", "oab-mg"),
    ("pt", "sintese"),
    ("pt", "tce-ms"),
    ("pt", "coad"),
    ("pt", "anda"),
    ("pt", "amb"),
    ("pt", "al-ma"),
    ("pt", "iape"),
    ("pt", "al-am"),
    ("pt", "dp-pe"),
    ("pt", "sefaz-to"),
    ("pt", "amagis"),
    ("pt", "carta-forense"),
    ("pt", "csjt"),
    ("pt", "direito-domestico"),
    ("pt", "direito-legal"),
    ("pt", "espaco-vital"),
    ("pt", "fenasj"),
    ("pt", "folha"),
    ("pt", "iab"),
    ("pt", "iaf"),
    ("pt", "stm"),
    ("pt", "tce-rs"),
    ("pt", "trf-2"),
    ("pt", "olhar-digital"),
    ("pt", "tech-tudo"),
    ("pt", "computer-world"),
    ("pt", "sbt"),
    ("pt", "estadao"),
    ("pt", "veja"),
    ("pt", "exame"),
    ("pt", "gazeta-do-povo"),
    ("pt", "epoca"),
    ("pt", "imaster"),

    # Failing Tests
    # ("pt", "direito-do-estado"),  # <<<<<<<
    # ("pt", "enm"),  # <<<<<<<
    # ("pt", "abojeris"),
    # ("pt", "acat"),
    # ("pt", "dias-brasil-adv"),
    # ("pt", "dp-sp"),
    # ("pt", "mp-mt"),
    # ("pt", "mpt"),
    # ("pt", "oab-al"),
    # ("pt", "oab-es"),
    # ("pt", "oab-go"),
    # ("pt", "oab-mt"),
    # ("pt", "sefaz-rs"),
    # ("pt", "sefaz-sc"),
    # ("pt", "sefaz-sp"),
    # ("pt", "stf"),
    # ("pt", "tj-rj"),
    # ("pt", "tj-sp"),
    # ("pt", "trf-3"),
    # ("pt", "trt-10"),
    # ("pt", "trt-24"),
    # ("pt", "trt-3"),
    # ("pt", "trt-4"),
])
def test_content_extractor(language, website):
    url_file_path = "tests/resources/{}/{}/url.txt".format(language, website)
    title_file_path = "tests/resources/{}/{}/title.txt".format(language, website)
    html_file_path = "tests/resources/{}/{}/page.html".format(language, website)

    url = _get_contents_of(url_file_path)
    html = _get_contents_of(html_file_path)

    expected_title = _get_contents_of(title_file_path)

    ferret = Ferret(url, html)
    assert expected_title == ferret.extract_title()
